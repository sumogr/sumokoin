name: Continuous_Integration_Testing

on: [push, pull_request]

jobs:

  cross-build-linux-32bit-binaries-on-xenial:
    runs-on: windows-latest
    defaults:
     run:
      shell: wsl-bash {0}
    steps:
    - name: use wsl
      uses: Vampire/setup-wsl@v1
      with:
          distribution: Ubuntu-20.04
    - name: checkout branch
      uses: actions/checkout@v1
    - name : update and install essential and openssl
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install libssl-dev:i386 libevent-dev:i386 -y
        sudo apt-get install g++-multilib gcc-multilib binutils bc cmake libldns-dev libexpat1-dev libtool -y
    - name : build expat
      run: |
        wget https://toolchains.bootlin.com/downloads/releases/sources/expat-2.2.4/expat-2.2.4.tar.bz2
        tar xfj expat-2.2.4.tar.bz2
        cd expat-2.2.4
        ./configure --enable-static --disable-shared
        make
        make install
        cd ..
    - name : build ldns
      run: |
        wget https://www.nlnetlabs.nl/downloads/ldns/ldns-1.6.17.tar.gz
        tar xf ldns-1.6.17.tar.gz
        cd ldns-1.6.17
        ./configure --disable-shared --enable-static --with-drill --with-pic
        make
        make install-h install-lib
        cd ..       
    - name : build boost
      run: |
        wget https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.tar.bz2
        tar xfj boost_1_68_0.tar.bz2
        sudo chmod -R 777 boost_1_68_0
        cd boost_1_68_0
        ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test,date_time,regex,serialization,locale --with-toolset=gcc
        ./b2 address-model=32 architecture=x86 -d2 -j2 -d1 --layout=tagged --build-type=complete threading=multi link=static threadapi=pthread runtime-link=shared -sNO_BZIP2=1 -sNO_ZLIB=1 toolset=gcc stage
        ./b2 address-model=32 architecture=x86 -d0 -j2 --layout=tagged --build-type=complete threading=multi link=static threadapi=pthread runtime-link=shared -sNO_BZIP2=1 -sNO_ZLIB=1 toolset=gcc install
        cd ..
    - name : build sodium
      run: |
        wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
        tar xf libsodium-1.0.18.tar.gz
        cd libsodium-1.0.18
        ./autogen.sh
        ./configure --enable-static --disable-shared
        make -j 2
        make install
        cd ..
    - name : build unbound
      run: |
        wget https://www.unbound.net/downloads/unbound-1.6.8.tar.gz
        tar xf unbound-1.6.8.tar.gz
        cd unbound-1.6.8
        ./configure --disable-shared --enable-static --without-pyunbound --prefix=$(host_prefix) --with-libexpat=$(host_prefix) --with-ssl=$(host_prefix) --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-pic
        make
        make install
        cd ..     
    - name : apt-get the rest of the packages
      run: |
        sudo apt-get install libzmq3-dev libusb-1.0-0-dev git pkg-config libunwind8-dev liblzma-dev libreadline6-dev doxygen graphviz libpgm-dev libhidapi-dev -y
        cd ..
        sudo chmod -R 777 sumokoin
        cd sumokoin
    - name: cross-compile sumokoin for linux i686
      run:  sudo make release-static -j 2
    - name: upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: Linux-i686-release-binaries
        path: build/**/bin/
