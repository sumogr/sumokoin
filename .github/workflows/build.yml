name: Continuous_Integration_Testing

on: [push, pull_request]

jobs:
  build-macos-native:
    runs-on: macOS-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: /Users/runner/Library/Caches/ccache
        key: ccache-macos-build-${{ github.sha }}
        restore-keys: ccache-macos-build-
    - name: install dependencies
      run: brew install boost hidapi zmq libpgm ldns expat libunwind-headers protobuf ccache
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make -j 3

  cross-compile-all-archs:
    runs-on: ubuntu-20.04
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: "RISCV 64bit cross"
            host: "riscv64-linux-gnu"
            packages: "python3 gperf g++-riscv64-linux-gnu"
          - name: "ARM v7 cross"
            host: "arm-linux-gnueabihf"
            packages: "python3 gperf g++-arm-linux-gnueabihf"
          - name: "ARM v8 cross"
            host: "aarch64-linux-gnu"
            packages: "python3 gperf g++-aarch64-linux-gnu"
          - name: "Windows 32bit cross"
            host: "i686-w64-mingw32"
            packages: "python3 g++-mingw-w64-i686 qttools5-dev-tools"
          - name: "Linux 32bit cross"
            host: "i686-pc-linux-gnu"
            packages: "gperf cmake g++-multilib python3-zmq"
          - name: "Windows 64bit cross"
            host: "x86_64-w64-mingw32"
            packages: "cmake python3 g++-mingw-w64-x86-64 qttools5-dev-tools"
          - name: "Linux 64bit cross"
            host: "x86_64-unknown-linux-gnu"
            packages: "gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
          - name: "MacOS cross"
            host: "x86_64-apple-darwin11"
            packages: "cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python-setuptools"
            osx_sdk: "10.11"
          - name: "Freebsd cross"
            host: "x86_64-unknown-freebsd"
            packages: "clang-9 gperf cmake python3-zmq libdbus-1-dev libharfbuzz-dev"
    name: ${{ matrix.toolchain.name }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: ccache
      uses: actions/cache@v2
      with:
        path: |
            ~/.ccache
            contrib/depends/built
            contrib/depends/sdk-sources
        key: ccache-${{ matrix.toolchain.host }}-${{ github.sha }}
        restore-keys: ccache-${{ matrix.toolchain.host }}-
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: install dependencies
      run:  sudo apt update; sudo apt -y install build-essential libtool cmake autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache ${{ matrix.toolchain.packages }}
    - name: prepare apple-darwin
      if: ${{ matrix.toolchain.host == 'x86_64-apple-darwin11' }}
      run: |
        curl  https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py
        python get-pip.py
        pip install setuptools
        pip install ez_setup
        wget https://sumokoin.org/downloads/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz
        sudo mkdir /home/runner/work/sumokoin/sumokoin/contrib/depends/SDKs
        sudo mv Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz /home/runner/work/sumokoin/sumokoin/contrib/depends/SDKs
        cd /home/runner/work/sumokoin/sumokoin/contrib/depends/SDKs
        sudo tar -xf Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz
        cd /home/runner/work/sumokoin/sumokoin
    - name: prepare w64-mingw32
      if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'i686-w64-mingw32' }}
      run: |
        sudo update-alternatives --set ${{ matrix.toolchain.host }}-g++ $(which ${{ matrix.toolchain.host }}-g++-posix)
        sudo update-alternatives --set ${{ matrix.toolchain.host }}-gcc $(which ${{ matrix.toolchain.host }}-gcc-posix)
    - name: build
      run: |
        ccache --max-size=150M
        make depends target=${{ matrix.toolchain.host }} -j2
    - uses: actions/upload-artifact@v2
      if: ${{ matrix.toolchain.host == 'x86_64-w64-mingw32' || matrix.toolchain.host == 'x86_64-apple-darwin11' || matrix.toolchain.host == 'x86_64-unknown-linux-gnu' }}
      with:
        name: ${{ matrix.toolchain.name }}
        path: |
          /home/runner/work/sumokoin/sumokoin/build/${{ matrix.toolchain.host }}/release/bin/sumo-wallet-cli*
          /home/runner/work/sumokoin/sumokoin/build/${{ matrix.toolchain.host }}/release/bin/sumokoind*

  build-windows-native-msys2:
    runs-on: windows-latest
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: C:\Users\runneradmin\.ccache-temp
      CCACHE_DIR: C:\Users\runneradmin\.ccache
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.ccache
        key: ccache-windows-build-${{ github.sha }}
        restore-keys: ccache-windows-build-
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-ccache mingw-w64-x86_64-libunwind mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-protobuf-c mingw-w64-x86_64-libusb git
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make release-static-win64 -j 3

  build-ubuntu-bionic-native:
    runs-on: ubuntu-18.04
    env:
      CCACHE_COMPRESS: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-bionic-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-bionic-build-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev libevent-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make -j 3

  build-bionic-debug-native:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-debug-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-debug-build-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make -j 3

  build-ubuntu-focal-fossa-native:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-focal-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-focal-build-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make -j 3

  build-ubuntu-focal-fossa-native-with-clang-10:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-focal-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-focal-build-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential clang-10 cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev ccache
    - name: build sumokoin
      run: |
        export CC=/usr/bin/clang
        export CXX=/usr/bin/clang++
        ccache --max-size=150M
        make -j 3

  build-ubuntu-bionic-static-native:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-ubuntu-bionic-static-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-bionic-static-build-
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential cmake miniupnpc libunbound-dev libevent-dev graphviz doxygen pkg-config libssl-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev libudev-dev ccache libtool autoconf automake python libtinfo5 ccache
    - name: build boost 1_74
      run: |
        wget https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.tar.bz2
        tar -xvf boost_1_74_0.tar.bz2
        rm -f /usr/boost_1_74_0.tar.bz2
        cd boost_1_74_0
        sudo ./bootstrap.sh
        sudo ./b2 install -j 3
        cd ..
    - name: build zmq
      run: |
        git clone https://github.com/zeromq/libzmq.git
        cd libzmq
        sudo ./autogen.sh
        sudo ./configure
        sudo make -j 3
        sudo make install
        sudo ldconfig
        cd ..
    - name: build libunwind
      run: |
        git clone https://github.com/libunwind/libunwind
        cd libunwind
        sudo ./autogen.sh
        sudo ./configure
        sudo make -j 3
        sudo make install
        cd ..
    - name: build sumokoin
      run: |
        ccache --max-size=150M
        make release-static -j 3

  test-ubuntu:
    needs: build-ubuntu-bionic-native
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: remove bundled boost
      run: sudo rm -rf /usr/local/share/boost
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt
      run: sudo apt update
    - name: install sumokoin dependencies
      run: sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev libevent-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev
    - name: install requests
      run: pip install requests
    - name: tests
      env:
        CTEST_OUTPUT_ON_FAILURE: ON
      run: make release-test -j 3
