name: Continuous_Integration_Testing

on: [push, pull_request]

jobs:
  cross-build-linux-x64-binaries-on-xenial:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set apt conf
      run: |
        echo "Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
    - name: update apt and clean the instance down to essentials
      run: |
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test             
        sudo apt update    
    - name: install sumokoin dependencies
      run: |
        sudo apt -y install clang bc cmake g++-multilib gcc-multilib binutils-x86-64-linux-gnu libgcc1-i386-cross lib64gcc1-dbg-i386-cross libstdc++6-i386-cross libstdc++-6-dev-i386-cross pkg-config libssl-dev libzmq3-dev libunbound-dev libevent-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libldns-dev libexpat1-dev doxygen graphviz libpgm-dev qttools5-dev-tools libhidapi-dev libusb-1.0-0-dev libudev-dev
    - name: cross compile sumokoin bins for linux i686
      run: |
        export CFLAGS=-m32
        export CXXFLAGS=-m32
        wget https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.tar.bz2
        tar -xvf boost_1_74_0.tar.bz2
        rm -f /usr/boost_1_74_0.tar.bz2
        cd boost_1_74_0
        sudo ./bootstrap.sh
        sudo ./b2 install -j 3
        cd ..
        export CFLAGS=-m32
        export CXXFLAGS=-m32
        git clone https://github.com/zeromq/libzmq.git
        cd libzmq
        sudo ./autogen.sh
        sudo ./configure
        sudo make -j3
        sudo make install
        sudo ldconfig
        cd ..
        export CFLAGS=-m32
        export CXXFLAGS=-m32
        git clone https://github.com/libunwind/libunwind
        cd libunwind
        sudo ./autogen.sh
        sudo ./configure
        sudo make -j 3
        sudo make install
        cd ..
        export CFLAGS=-m32
        export CXXFLAGS=-m32                        
        sudo wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2g.tar.gz
        sudo tar -xf OpenSSL_1_0_2g.tar.gz
        cd openssl-OpenSSL_1_0_2g
        sudo ./config
        sudo make
        sudo make install
        sudo ldconfig
        cd ..
        sudo wget https://ftp.gnu.org/gnu/libiconv/libiconv-1.15.tar.gz
        sudo tar -xf libiconv-1.15.tar.gz
        cd libiconv-1.15
        export CFLAGS=-m32
        export CXXFLAGS=-m32  
        sudo ./configure
        sudo make -j 3
        sudo make install -j 3
        cd ..
    - name: cmake
      run: |
        export CFLAGS=-m32
        export CXXFLAGS=-m32        
        cmake -DCMAKE_CROSSCOMPILING=True -D STATIC=ON -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=release -D BUILD_TAG="linux-x86" -DUSE32bit=true
    - name: build
      run: |
        export CFLAGS=-m32
        export CXXFLAGS=-m32               
        make -j 3
    - name: upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: linux-i686-static-binaries
        path: build/**/bin/

